<!-- 添加新建文章的按钮，使用Split button -->
<% if (currentUser) { %>
<div class="btn-group pull-right">
  <button type="button" class="btn btn-default" name="button">操作</button>
  <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" name="button">
    <span class="caret"></span>
    <span class="sr-only">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    <li><a href="/posts/create">新建</a></li>
  </ul>
</div>
<% } %>

<div class="col-md-9">
  <h1><%= title %></h1>
  <!-- 使用list-group组件来显示文章 -->
  <ul class="list-group" v-for="item in PostsList">
    <li class="list-group-item">
      <a v-bind:href="item.url">{{ item.sortId }} {{ item.title }}</a>
    </li>
  </ul>
  <button type="button" name="button" v-if="isLoad" v-on:click="loadMore()">加载更多</button>
</div>
<div class="col-md-3">
  <strong>分类</strong>
  <span><a href="/categories">管理</a> </span>
  <ul class="list-group" v-for="item in CategoriesList">
    <li class="list-group-item">
      <a v-bind:href="item.url">{{ item.name }}</a>
    </li>
  </ul>
</div>
<div class="col-md-3">
  <span ><strong>归档</strong></span>
  <span><a href="/archives">管理</a> </span>
  <ul class="list-group" v-for="item in ArchivesList">
    <li class="list-group-item">
      <a :href="item.url">{{ item.name }}</a>
    </li>
  </ul>
</div>

<script>
    var vm = new Vue({
        el: "#app",
        data: {
            PostsList: [],
            CategoriesList: [],
            date: [],
            ArchivesList: [],
            PageCount: 1,
            isLoad: true
        },
        methods: {
            fetchData() {
                axios.get('/api/v1/posts/pagecount/' + vm.PageCount++ )
                .then(function(response){
                  console.log('response:' + response);
                    vm.PostsList = response.data.PostsList;
                    var i = 1;
                    vm.PostsList.forEach(function(element){
                      element.sortId = i++;
                      element.url = '/posts/show?id=' + element._id;
                    });
                    console.log(vm.PostsList);
                })
                .catch(function(err){
                  alert(err.message);
                });

                axios.get('/api/v1/categories')
                .then(function(response){
                  console.log('response:' + response);
                    vm.CategoriesList = response.data.CategoriesList;

                    vm.CategoriesList.forEach(function(element){
                      element.url = '/categories/show?id=' + element._id;
                    });
                    console.log(vm.CategoriesList);
                })
                .catch(function(err){
                  alert(err.response.data.error);
                });
                // 获取归档分类
                axios.get('/api/v1/archives')
                .then(function(response){
                    vm.ArchivesList = response.data.ArchivesList;
                    vm.ArchivesList.forEach(function(element){
                      element.url = '/archives/show?id=' + element._id;
                      var date = new Date(element.time);

                      element.name = date.getFullYear() + '-' + (date.getMonth() + 1);
                      console.log(`url: ${element.url}, name: ${element.name}`);
                    });
                })
                .catch(function(err){
                  alert(err.message);
                });
            },
            loadMore() {
              axios.get('/api/v1/posts/pagecount/' + vm.PageCount++ )
              .then(function(response){

                console.log('response:' + response);
                  var PostsList = response.data.PostsList;
                  if (PostsList.length < 30) {
                    vm.isLoad = false;
                  }
                  var i = 1;
                  PostsList.forEach(function(element){
                    element.sortId = 30 * (vm.PageCount - 2 ) + i++;
                    element.url = '/posts/show?id=' + element._id;
                    vm.PostsList.push(element);
                  });
                  console.log(vm.PostsList);
              })
              .catch(function(err){
                alert(err.message);
              });
            }
        }
    })
    vm.fetchData();
</script>
