<!-- 添加新建文章的按钮，使用Split button -->
<% if (currentUser) { %>
<div class="btn-group pull-right">
  <button type="button" class="btn btn-default" name="button">操作</button>
  <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" name="button">
    <span class="caret"></span>
    <span class="sr-only">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    <li><a href="/posts/create">新建</a></li>
  </ul>
</div>
<% } %>
<!-- 文章显示和内容其实两者不相关，他们是不同的处理方式，一个是css，一个是关于内容 -->
  <div class="container">
    <div class="col-md-8 col-md-offset-2">
      <div id="app">

          <h1><%= title %></h1>

          <!-- <p v-for="item in PostsList">{{ item.title }}</p> -->

          <!-- 文章列表跳转过去，也就是每个文章列表都是超链接，链接到文章详情的页面 -->
          <!-- <div v-for="item in PostsList">
            <a v-bind:href="item.url" >{{ item.title }}</a>
          </div> -->

          <!-- 使用list-group组件来显示文章 -->
          <ul class="list-group" v-for="item in PostsList">
            <li class="list-group-item">
              <a v-bind:href="item.url">{{ item.title }}</a>
            </li>
          </ul>


        </div>
      </div>
  </div>
<script>
    var vm = new Vue({
        el: "#app",
        data: {
            PostsList: []
        },
        methods: {
            fetchData() {
                axios.get('/api/v1/posts')
                .then(function(response){
                  console.log('response:' + response);
                    vm.PostsList = response.data.PostsList;
                    // 给每个变量的设置url地址
                    // vm.PostsList.forEach((element) => element.url = '/posts/show?id=' + element._id);

                    // 箭头函数是将原来的额函数改为了箭头，其等价函数应该如下，亲测没毛病
                    vm.PostsList.forEach(function(element){
                      element.url = '/posts/show?id=' + element._id;
                    });
                    console.log(vm.PostsList);
                })
                .catch(function(err){
                  alert(err.response.data.error);
                });
            }
        }
    })
    vm.fetchData();
</script>
