{"version":3,"sources":["../src/route.api.js"],"names":["express","require","router","Router","PostModel","bcrypt","UserModel","config","get","req","res","next","json","PostsList","post","console","log","body","title","content","send","success","err","authorId","locals","currentUser","_id","save","doc","find","posts","id","params","findOne","patch","findOneAndUpdate","name","pass","rePass","errorHandle","Error","user","hashSync","end","isOk","compareSync","authToken","opts","path","maxAge","signed","httpOnly","cookie","cookieName","module","exports"],"mappings":"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","file":"route.api.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nvar PostModel = require('./models/post');\nvar bcrypt = require('bcrypt');\nvar UserModel = require('./models/user');\nvar config = require('./config');\n\n/* GET posts list . */\nrouter.get('/posts/list', function(req, res, next) {\n  // res.send({title: 'posts'});\n  // res.render('posts', {title: 'posts'});\n  // 返回一个HTML页面，给一个对象，包括title和postslist\n  // res.render('posts', {title: \"posts\", PostsList: ['文章1', '文章2', '文章3']});\n  // 返回JSON对象 然后浏览器渲染\n  res.json({PostsList: ['文章1', '文章2', '文章3']});\n});\n\nrouter.post('/posts', function(req, res, next){\n  console.log(\"post create information\");\n  console.log('title:' + req.body.title);\n  console.log('content: ' + req.body.content);\n\n  var title = req.body.title;\n  var content = req.body.content;\n\n  if (title === '' || content === '')\n  {\n    console.log('标题或者内容不同为空');\n    // return next('标题或者内容不同为空');\n    // 返回一个错误提示\n    res.send({success: false, err: '标题或者内容不同为空'});\n  }\n  // save the title and content\n  var post = new PostModel();\n  post.title = title;\n  post.content = content;\n  post.authorId = res.locals.currentUser._id;\n  post.save(function(err, doc){\n    if (err){\n      next(err);\n      return;\n    }\n    res.json({post: doc});  // 返回新建的文章数据\n  });\n});\n\n// get posts\nrouter.get('/posts', function(req, res, next){\n  // Get posts from MongoDb\n  console.log('Get posts from MongoDb');\n  PostModel.find({}, {}, function(err, posts){\n    console.log('find the posts');\n    if (err){\n      // res.json({success: false});\n      console.log('get posts page error ');\n      next(err);\n      return;\n    }\n    else {\n      console.log('posts:' + posts);\n      res.json({success: true, PostsList: posts});\n    }\n  });\n});\n\n// get on specific article\nrouter.get('/posts/:id', function(req, res, next){\n  // var id = req.query.id;\n  var id = req.params.id;\n  console.log('post/:id = ', id);\n  PostModel.findOne({_id: id}, function(err, post){\n    if (err){\n      console.log('can not find the article');\n      // res.json({success: false});\n      next(err);\n      return;\n    };\n    console.log('find the article');\n    res.json({success: true, post});\n  });\n});\n\n// post edit ariticle\nrouter.patch('/posts', function(req, res, next){\n  var id = req.body.id;\n  var title = req.body.title;\n  var content = req.body.content;\n\n  PostModel.findOneAndUpdate({_id: id}, {title, content}, function(err){\n    if (err){\n      // res.json({success: false});\n      next(err);\n      return ;\n    }\n    res.json({success: true});\n  });\n});\n\n\n// POST signup user\nrouter.post('/signup', function(req, res, next){\n  var name = req.body.name;\n  var pass = req.body.pass;\n  var rePass = req.body.rePass;\n\n  if (pass !== rePass){\n    return errorHandle(new Error(\"两次密码不一致\"), next);\n  }\n\n  var user = new UserModel();\n  user.name = name ;\n  user.pass = bcrypt.hashSync(pass, 10);  // 网络上传递的是明文啊，会不会有影响\n  user.save(function(err){\n    if (err){\n      next(err);\n    }\n    else {\n      res.end();\n    }\n  });\n});\n\n// POST signin user\nrouter.post('/signin', function(req, res, next){\n  console.log('post signin ');\n  var name = req.body.name || '';\n  var pass = req.body.pass || '';\n\n  UserModel.findOne({name}, function(err, user){\n    if (err || !user){\n      return next(new Error('找不到用户'));\n\n    }\n    else {\n      var isOk = bcrypt.compareSync(pass, user.pass);\n      if (!isOk){\n        return next(new Error('密码不对'));\n      }\n\n      var authToken = user._id;\n      var opts = {\n        path: '/',\n        // maxAge: 1000 * 60 * 60 * 24 * 30, //cookie 有效期30天\n        // maxAge: -1,     // 只有浏览器打开的这段时间有效，关闭之后无效\n        maxAge: 1000 * 60 * 60 * 24 * 30, // 使用1分钟的有效时长\n        signed: true,\n        httpOnly: true\n\n      };\n\n      res.cookie(config.cookieName, authToken, opts);\n      res.end();\n    }\n  });\n});\n\n\n\nmodule.exports = router;\n"]}